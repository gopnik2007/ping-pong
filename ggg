from pygame import *


class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.x > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN]:
            self.rect.y += self.speed

    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.x > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.x < 500 - 80:
            self.rect.y += self.speed


finish = False
game = True
clock = time.Clock()
FPS = 60
back = (255,80,70)
raket1 = Player ("111.jpg", 30, 200, 50, 150, 4)
raket2 = Player ("333.jpg", 420, 200, 50, 150, 4)
ball = GameSprite("222.png", 200, 200, 50, 50, 4)

window = display.set_mode((500, 500))

width = 500
height = 500



speed_x = 3
speed_y = 3

font.init()
lose1 = font.Font (None, 46).render("Россия победила!", True, (0, 0, 0))

lose2 = font.Font (None, 46).render("Победила Россия!", True, (0, 0, 0))



while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
    if finish != True:
        window.fill(back)
        raket1.update_l()
        raket2.update_r()

        ball.rect.x += speed_x
        ball.rect.y += speed_y
        if ball.rect.y < 0 or ball.rect.y > height - ball.rect.height:
            speed_y *= -1

        if sprite.collide_rect(ball, raket1) or sprite.collide_rect(ball, raket2) :
            speed_x *= -1

        if ball.rect.x < 0:
            finish = True
            window.blit(lose1, (120, 240))
        if ball.rect.x > width - ball.rect.width:
            window.blit(lose2, (120, 240))
            finish = True

        raket1.reset()
        raket2.reset()
        ball.reset()

    display.update()
    clock.tick(FPS)

